{"ast":null,"code":"var _jsxFileName = \"C:\\\\vsc-files\\\\vmbot\\\\src\\\\components\\\\Quiz\\\\Quiz.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Loading from \"./Loading\";\nimport RenderQuiz from \"./RenderQuiz\";\nimport \"./Quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Quiz(props) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [linux, setLinux] = useState([]);\n  const [sql, setSql] = useState([]);\n  const [docker, setDocker] = useState([]);\n  var API_KEY = process.env.REACT_APP_SECRET_NAME;\n\n  const loadLinux = async () => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(\"https://quizapi.io/api/v1/questions?apiKey=\" + API_KEY + \"&category=linux&limit=5\");\n      const data = await response.json();\n      setLoading(false);\n      setLinux(data);\n      console.log(data);\n    } catch (error) {\n      setLoading(false);\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadLinux();\n  }, []);\n\n  const loadDocker = async () => {\n    try {\n      const response = await fetch(\"https://quizapi.io/api/v1/questions?apiKey=\" + API_KEY + \"&category=docker&limit=5\");\n      const data = await response.json();\n      setDocker(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadDocker();\n  }, []);\n\n  const loadSql = async () => {\n    try {\n      const response = await fetch(\"https://quizapi.io/api/v1/questions?apiKey=\" + API_KEY + \"&category=sql&limit=5\");\n      const data = await response.json();\n      setSql(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    loadSql();\n  }, []);\n  if (loading === true) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n\n  if (linux.length === 0 || sql.length === 0 || docker.length === 0) {\n    if (props.course === \"Linux\") return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadLinux,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this);else if (props.course === \"Docker\") return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadDocker,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 14\n    }, this);else return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: loadSql,\n      children: \"Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (loading === false) {\n    if (props.course === \"Linux\") {\n      return /*#__PURE__*/_jsxDEV(RenderQuiz, {\n        data: linux\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }, this);\n    } else if (props.course === \"Docker\") return /*#__PURE__*/_jsxDEV(RenderQuiz, {\n      data: docker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 50\n    }, this);else return /*#__PURE__*/_jsxDEV(RenderQuiz, {\n      data: sql\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(Quiz, \"qStxcqkOdVJdqojwAmRaMa84jME=\");\n\n_c = Quiz;\nexport default Quiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["C:/vsc-files/vmbot/src/components/Quiz/Quiz.jsx"],"names":["React","useEffect","useState","Loading","RenderQuiz","Quiz","props","loading","setLoading","linux","setLinux","sql","setSql","docker","setDocker","API_KEY","process","env","REACT_APP_SECRET_NAME","loadLinux","response","fetch","data","json","console","log","error","loadDocker","loadSql","length","course"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Loading from \"./Loading\";\r\nimport RenderQuiz from \"./RenderQuiz\";\r\nimport \"./Quiz.css\";\r\nfunction Quiz(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [linux, setLinux] = useState([]);\r\n  const [sql, setSql] = useState([]);\r\n  const [docker, setDocker] = useState([]);\r\n  var API_KEY = process.env.REACT_APP_SECRET_NAME;\r\n  const loadLinux = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://quizapi.io/api/v1/questions?apiKey=\" +\r\n          API_KEY +\r\n          \"&category=linux&limit=5\"\r\n      );\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      setLinux(data);\r\n      console.log(data);\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadLinux();\r\n  }, []);\r\n  const loadDocker = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://quizapi.io/api/v1/questions?apiKey=\" +\r\n          API_KEY +\r\n          \"&category=docker&limit=5\"\r\n      );\r\n      const data = await response.json();\r\n      setDocker(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadDocker();\r\n  }, []);\r\n  const loadSql = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        \"https://quizapi.io/api/v1/questions?apiKey=\" +\r\n          API_KEY +\r\n          \"&category=sql&limit=5\"\r\n      );\r\n      const data = await response.json();\r\n      setSql(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    loadSql();\r\n  }, []);\r\n  if (loading === true)\r\n    return (\r\n      <div>\r\n        <Loading />\r\n      </div>\r\n    );\r\n  if (linux.length === 0 || sql.length === 0 || docker.length === 0) {\r\n    if (props.course === \"Linux\")\r\n      return <button onClick={loadLinux}>Refresh</button>;\r\n    else if (props.course === \"Docker\")\r\n      return <button onClick={loadDocker}>Refresh</button>;\r\n    else return <button onClick={loadSql}>Refresh</button>;\r\n  }\r\n  if (loading === false) {\r\n    if (props.course === \"Linux\") {\r\n      return <RenderQuiz data={linux} />;\r\n    } else if (props.course === \"Docker\") return <RenderQuiz data={docker} />;\r\n    else return <RenderQuiz data={sql} />;\r\n  }\r\n}\r\nexport default Quiz;"]},"metadata":{},"sourceType":"module"}