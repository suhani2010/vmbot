{"ast":null,"code":"import React from \"react\";\n\nclass ActionProvider {\n  constructor(createChatbotMessage, setStateFunc, createClientMessage) {\n    this.handleLinuxQuiz = () => {\n      console.log(\"CLICKED LINUX;\");\n      const message = this.createChatbotMessage(\"Sure! Here's your Linux QUIZ !\", {\n        widget: \"linux\"\n      });\n      this.setChatbotMessage(message);\n    };\n\n    this.handleDockerQuiz = () => {\n      const message = this.createChatbotMessage(\"Sure! Here's your Docker QUIZ !\", {\n        widget: \"docker\"\n      });\n      this.setChatbotMessage(message);\n    };\n\n    this.handleSqlQuiz = () => {\n      const message = this.createChatbotMessage(\"Sure! Here's your SQL QUIZ !\", {\n        widget: \"sql\"\n      });\n      this.setChatbotMessage(message);\n    };\n\n    this.setChatbotMessage = messages => {\n      if (Array.isArray(messages)) {\n        this.setState(state => ({ ...state,\n          messages: [...state.messages, ...messages]\n        }));\n      } else {\n        this.setState(state => ({ ...state,\n          messages: [...state.messages, messages]\n        }));\n      }\n    };\n\n    this.createChatbotMessage = createChatbotMessage;\n    this.setState = setStateFunc;\n    this.createClientMessage = createClientMessage;\n  }\n\n  handleHello() {\n    const message = this.createChatbotMessage('heeyyy!');\n    this.setChatbotMessage(message);\n  } // messageHandler = () => {\n  //   const message = this.createChatBotMessage(\n  //     \"Hello,what do you want to learn\",\n  //     {\n  //       widget: \"options\"\n  //     }\n  //   );\n  //   this.setChatbotMessage(message);\n  // };\n\n\n}\n\nexport default ActionProvider;","map":{"version":3,"sources":["C:/vsc-files/vmbot/src/chatbot/ActionProvider.js"],"names":["React","ActionProvider","constructor","createChatbotMessage","setStateFunc","createClientMessage","handleLinuxQuiz","console","log","message","widget","setChatbotMessage","handleDockerQuiz","handleSqlQuiz","messages","Array","isArray","setState","state","handleHello"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,CAAqB;AACjBC,EAAAA,WAAW,CAACC,oBAAD,EAAuBC,YAAvB,EAAqCC,mBAArC,EAA0D;AAAA,SAMrEC,eANqE,GAMnD,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,YAAMC,OAAO,GAAG,KAAKN,oBAAL,CACd,gCADc,EAEd;AACEO,QAAAA,MAAM,EAAE;AADV,OAFc,CAAhB;AAMA,WAAKC,iBAAL,CAAuBF,OAAvB;AACD,KAfoE;;AAAA,SAgBrEG,gBAhBqE,GAgBlD,MAAM;AACvB,YAAMH,OAAO,GAAG,KAAKN,oBAAL,CACd,iCADc,EAEd;AACEO,QAAAA,MAAM,EAAE;AADV,OAFc,CAAhB;AAMA,WAAKC,iBAAL,CAAuBF,OAAvB;AACD,KAxBoE;;AAAA,SAyBrEI,aAzBqE,GAyBrD,MAAM;AACpB,YAAMJ,OAAO,GAAG,KAAKN,oBAAL,CAA0B,8BAA1B,EAA0D;AACxEO,QAAAA,MAAM,EAAE;AADgE,OAA1D,CAAhB;AAGA,WAAKC,iBAAL,CAAuBF,OAAvB;AACD,KA9BoE;;AAAA,SA+CvEE,iBA/CuE,GA+ClDG,QAAD,IAAc;AAChC,UAAIC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAJ,EAA6B;AAC3B,aAAKG,QAAL,CAAeC,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBJ,UAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoB,GAAGA,QAAvB;AAFc,SAAZ,CAAd;AAID,OALD,MAKO;AACL,aAAKG,QAAL,CAAeC,KAAD,KAAY,EACxB,GAAGA,KADqB;AAExBJ,UAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBA,QAApB;AAFc,SAAZ,CAAd;AAID;AACF,KA3DsE;;AACnE,SAAKX,oBAAL,GAA4BA,oBAA5B;AACA,SAAKc,QAAL,GAAgBb,YAAhB;AACA,SAAKC,mBAAL,GAA2BA,mBAA3B;AACD;;AA4BHc,EAAAA,WAAW,GAAE;AACX,UAAMV,OAAO,GAAG,KAAKN,oBAAL,CAA0B,SAA1B,CAAhB;AAEA,SAAKQ,iBAAL,CAAuBF,OAAvB;AACD,GArCkB,CAuCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/CmB;;AA+DnB,eAAeR,cAAf","sourcesContent":["import React from \"react\";\r\n\r\nclass ActionProvider {\r\n    constructor(createChatbotMessage, setStateFunc, createClientMessage) {\r\n      this.createChatbotMessage = createChatbotMessage;\r\n      this.setState = setStateFunc;\r\n      this.createClientMessage = createClientMessage;\r\n    }\r\n\r\n    handleLinuxQuiz = () => {\r\n      console.log(\"CLICKED LINUX;\")\r\n      const message = this.createChatbotMessage(\r\n        \"Sure! Here's your Linux QUIZ !\",\r\n        {\r\n          widget: \"linux\"\r\n        }\r\n      );\r\n      this.setChatbotMessage(message);\r\n    };\r\n    handleDockerQuiz = () => {\r\n      const message = this.createChatbotMessage(\r\n        \"Sure! Here's your Docker QUIZ !\",\r\n        {\r\n          widget: \"docker\"\r\n        }\r\n      );\r\n      this.setChatbotMessage(message);\r\n    };\r\n    handleSqlQuiz = () => {\r\n      const message = this.createChatbotMessage(\"Sure! Here's your SQL QUIZ !\", {\r\n        widget: \"sql\"\r\n      });\r\n      this.setChatbotMessage(message);\r\n    };\r\n\r\n  handleHello(){\r\n    const message = this.createChatbotMessage('heeyyy!');\r\n\r\n    this.setChatbotMessage(message);\r\n  }\r\n\r\n  // messageHandler = () => {\r\n  //   const message = this.createChatBotMessage(\r\n  //     \"Hello,what do you want to learn\",\r\n  //     {\r\n  //       widget: \"options\"\r\n  //     }\r\n  //   );\r\n  //   this.setChatbotMessage(message);\r\n  // };\r\n  setChatbotMessage = (messages) => {\r\n    if (Array.isArray(messages)) {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        messages: [...state.messages, ...messages]\r\n      }));\r\n    } else {\r\n      this.setState((state) => ({\r\n        ...state,\r\n        messages: [...state.messages, messages]\r\n      }));\r\n    }\r\n  };\r\n}\r\n\r\n  export default ActionProvider;"]},"metadata":{},"sourceType":"module"}